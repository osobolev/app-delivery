subprojects {

    apply(plugin: "java-library")
    apply(plugin: "maven-publish")

    group = "com.github.osobolev.app-delivery"
    version = "5.3"

    sourceCompatibility = "8"

    compileJava.options.compilerArgs << "-Xlint:-options,deprecation,unchecked"
    compileJava.options.encoding = "UTF-8"
    sourceSets.main.java.srcDirs = ["src"]
    
    repositories {
        mavenLocal()
        mavenCentral()
    }

    java {
        withSourcesJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from(components.java)
            }
        }
    }

    jar.manifest.attributes("Implementation-Version": project.version)

    clean.doLast {
        project.delete("$projectDir/out")
    }
}

project(":apploader-common") {
}

project(":apploader-client") {
    dependencies {
        api(project(":apploader-common"))
    }
}

project(":apploader-lib") {
    dependencies {
        api(project(":apploader-common"))
    }
}

project(":apploader") {
    dependencies {
        compileOnly(project(":apploader-client"))
        compileOnly(project(":apploader-lib"))
    }

    jar {
        dependsOn(configurations.compileClasspath)
        from {
            configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        manifest.attributes("Main-Class": "apploader.AppLoader")
    }
}

project(":server-core") {
    dependencies {
        api("com.github.osobolev.sqlg3:sqlg3-remote-server:2.0")
    }
}

project(":server-install") {
    dependencies {
        implementation(project(":apploader-common"))
    }
}

project(":server-http") {
    dependencies {
        api("javax.servlet:javax.servlet-api:3.1.0")
        implementation("com.github.osobolev.sqlg3:sqlg3-remote-server:2.0")
        implementation(project(":apploader-common"))
        implementation(project(":server-install"))
    }
}

project(":server-jetty") {
    dependencies {
        implementation("org.eclipse.jetty:jetty-servlet:9.4.43.v20210629")
        api(project(":server-core"))
        implementation(project(":apploader-common"))
        implementation(project(":server-http"))
    }
}

project(":server-service") {
    dependencies {
        api(project(":server-jetty"))
    }
}

project(":server-war") {
    dependencies {
        api(project(":server-core"))
        implementation(project(":apploader-common"))
        implementation(project(":server-http"))
    }
}

project(":server-desktop") {
    dependencies {
        api(project(":server-jetty"))
    }
}

project(":server-files") {
    sourceSets.main.resources.srcDirs = ["webapp"]
}
