subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = 'com.github.osobolev.app-delivery.sample'
    version = '4.0'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
                             
    compileJava.options.encoding = 'UTF-8'

    sourceSets.main.java.srcDirs = ['src']

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

project(':sample_db') {

    configurations {
        sqlg
    }

    dependencies {
        compileOnly 'com.github.osobolev.sqlg2:sqlg2-preprocess:5.0'
        runtime 'com.github.osobolev.sqlg2:sqlg2-runtime:5.0'
        sqlg 'com.h2database:h2:1.4.191'
        sqlg 'com.github.osobolev.sqlg2:sqlg2-preprocess:5.0'
    }

    task preprocess {
        doLast {
            ant.taskdef(name: 'sqlg', classname: 'sqlg2.Preprocess', classpath: configurations.sqlg.asPath)
            ant.sqlg(classpath: configurations.sqlg.asPath,
                     driverclass: 'org.h2.Driver', dbclass: 'sqlg2.db.specific.Generic',
                     url: 'jdbc:h2:mem:', user: '', password: '',
                     implpack: 'wrapper', wrappack: 'wrapper',
                     srcroot: 'src', encoding: compileJava.options.encoding) {
                fileset(dir: 'src') {
                    include(name: 'sample/dao/ClientDB.java')
                }
            }
        }
    }
    compileJava.dependsOn(preprocess)
}

project(':sample_client') {
    dependencies {
        compile 'com.github.osobolev.app-delivery:apploader-client:4.0'
        compile 'com.github.osobolev.sqlg2:sqlg2-remote-client:5.0'
        compile(project(':sample_db')) {
            exclude module: 'sqlg2-runtime'
        }
    }
}

project(':sample_server') {
    
    apply plugin: 'war'

    configurations {
        webapploader
        webdistr
        webfiles
    }

    dependencies {
        compile 'com.github.osobolev.sqlg2:sqlg2-remote-server:5.0'
        compile 'com.github.osobolev.app-delivery:server-war:4.0'
        runtime project(':sample_db')

        webfiles 'com.github.osobolev.app-delivery:server-files:4.0@war'
        webapploader 'com.github.osobolev.app-delivery:apploader:4.0'
        webdistr project(':sample_client')
    }

    task createList {
        doLast {
            def list = ['corejar=apploader.jar']
            configurations.webdistr.each {
                list.add("jar=distr/${it.name}")
            }
            list.add('mainClass=sample.Client')
            def file = file('build/list/sample_jars.list')
            file.parentFile.mkdirs()
            def eoln = '\n'
            file.setText(list.join(eoln) + eoln, compileJava.options.encoding)
        }
    }
    war.dependsOn(createList)

    war {
        archiveName 'sample_app.war'
        webAppDirName = 'webapp'

        from(configurations.webdistr) {
            into 'distr'
        }
        from(configurations.webapploader) {
            rename('apploader-.*\\.jar', 'apploader.jar')
        }
        from('build/list')
        from(zipTree(configurations.webfiles.find({true})))
    }
}
